/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface RevealMarketInterface extends ethers.utils.Interface {
  functions: {
    "CANCELLED_COUNTDOWN_BLOCKS()": FunctionFragment;
    "FEE_PERCENT()": FunctionFragment;
    "MARKET_CLOSE_COUNTDOWN_TIMESTAMP()": FunctionFragment;
    "REQUEST_MAXIMUM()": FunctionFragment;
    "REQUEST_MINIMUM()": FunctionFragment;
    "bulkGetRevealRequests(uint256,uint256)": FunctionFragment;
    "cancelReveal(uint256)": FunctionFragment;
    "claimRefund(uint256)": FunctionFragment;
    "claimReveal(uint256)": FunctionFragment;
    "getAllRevealRequests()": FunctionFragment;
    "getConstants()": FunctionFragment;
    "getNRevealRequests()": FunctionFragment;
    "getRevealRequest(uint256)": FunctionFragment;
    "getRevealRequestPage(uint256)": FunctionFragment;
    "owner()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "requestReveal(uint256[2],uint256[2][2],uint256[2],uint256[9])": FunctionFragment;
    "rugPull()": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "CANCELLED_COUNTDOWN_BLOCKS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "FEE_PERCENT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MARKET_CLOSE_COUNTDOWN_TIMESTAMP",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "REQUEST_MAXIMUM",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "REQUEST_MINIMUM",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "bulkGetRevealRequests",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelReveal",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "claimRefund",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "claimReveal",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getAllRevealRequests",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getConstants",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getNRevealRequests",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getRevealRequest",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRevealRequestPage",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "requestReveal",
    values: [
      [BigNumberish, BigNumberish],
      [[BigNumberish, BigNumberish], [BigNumberish, BigNumberish]],
      [BigNumberish, BigNumberish],
      [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ]
    ]
  ): string;
  encodeFunctionData(functionFragment: "rugPull", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "CANCELLED_COUNTDOWN_BLOCKS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "FEE_PERCENT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MARKET_CLOSE_COUNTDOWN_TIMESTAMP",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "REQUEST_MAXIMUM",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "REQUEST_MINIMUM",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bulkGetRevealRequests",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelReveal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "claimRefund",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "claimReveal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAllRevealRequests",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getConstants",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNRevealRequests",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRevealRequest",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRevealRequestPage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "requestReveal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "rugPull", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;

  events: {
    "OwnershipTransferred(address,address)": EventFragment;
    "RevealCancelled(address,uint256,uint256,uint256,uint256,uint256)": EventFragment;
    "RevealCollected(address,uint256,uint256,uint256,uint256)": EventFragment;
    "RevealRefunded(address,uint256,uint256,uint256,uint256,uint256)": EventFragment;
    "RevealRequested(address,uint256,uint256,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RevealCancelled"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RevealCollected"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RevealRefunded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RevealRequested"): EventFragment;
}

export class RevealMarket extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: RevealMarketInterface;

  functions: {
    CANCELLED_COUNTDOWN_BLOCKS(overrides?: CallOverrides): Promise<[BigNumber]>;

    FEE_PERCENT(overrides?: CallOverrides): Promise<[number]>;

    MARKET_CLOSE_COUNTDOWN_TIMESTAMP(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    REQUEST_MAXIMUM(overrides?: CallOverrides): Promise<[BigNumber]>;

    REQUEST_MINIMUM(overrides?: CallOverrides): Promise<[BigNumber]>;

    bulkGetRevealRequests(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          BigNumber
        ] & {
          requester: string;
          collector: string;
          location: BigNumber;
          x: BigNumber;
          y: BigNumber;
          payout: BigNumber;
          paid: boolean;
          refunded: boolean;
          cancelCompleteBlock: BigNumber;
        })[]
      ] & {
        ret: ([
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          BigNumber
        ] & {
          requester: string;
          collector: string;
          location: BigNumber;
          x: BigNumber;
          y: BigNumber;
          payout: BigNumber;
          paid: boolean;
          refunded: boolean;
          cancelCompleteBlock: BigNumber;
        })[];
      }
    >;

    cancelReveal(
      location: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    claimRefund(
      location: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    claimReveal(
      location: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getAllRevealRequests(
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          BigNumber
        ] & {
          requester: string;
          collector: string;
          location: BigNumber;
          x: BigNumber;
          y: BigNumber;
          payout: BigNumber;
          paid: boolean;
          refunded: boolean;
          cancelCompleteBlock: BigNumber;
        })[]
      ]
    >;

    getConstants(
      overrides?: CallOverrides
    ): Promise<
      [
        [BigNumber, BigNumber, BigNumber, number] & {
          MARKET_CLOSE_COUNTDOWN_TIMESTAMP: BigNumber;
          CANCELLED_COUNTDOWN_BLOCKS: BigNumber;
          REQUEST_MINIMUM: BigNumber;
          FEE_PERCENT: number;
        }
      ]
    >;

    getNRevealRequests(overrides?: CallOverrides): Promise<[BigNumber]>;

    getRevealRequest(
      location: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          BigNumber
        ] & {
          requester: string;
          collector: string;
          location: BigNumber;
          x: BigNumber;
          y: BigNumber;
          payout: BigNumber;
          paid: boolean;
          refunded: boolean;
          cancelCompleteBlock: BigNumber;
        }
      ]
    >;

    getRevealRequestPage(
      pageIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          BigNumber
        ] & {
          requester: string;
          collector: string;
          location: BigNumber;
          x: BigNumber;
          y: BigNumber;
          payout: BigNumber;
          paid: boolean;
          refunded: boolean;
          cancelCompleteBlock: BigNumber;
        })[]
      ]
    >;

    owner(overrides?: CallOverrides): Promise<[string]>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    requestReveal(
      _a: [BigNumberish, BigNumberish],
      _b: [[BigNumberish, BigNumberish], [BigNumberish, BigNumberish]],
      _c: [BigNumberish, BigNumberish],
      _input: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    rugPull(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  CANCELLED_COUNTDOWN_BLOCKS(overrides?: CallOverrides): Promise<BigNumber>;

  FEE_PERCENT(overrides?: CallOverrides): Promise<number>;

  MARKET_CLOSE_COUNTDOWN_TIMESTAMP(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  REQUEST_MAXIMUM(overrides?: CallOverrides): Promise<BigNumber>;

  REQUEST_MINIMUM(overrides?: CallOverrides): Promise<BigNumber>;

  bulkGetRevealRequests(
    startIdx: BigNumberish,
    endIdx: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    ([
      string,
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      boolean,
      BigNumber
    ] & {
      requester: string;
      collector: string;
      location: BigNumber;
      x: BigNumber;
      y: BigNumber;
      payout: BigNumber;
      paid: boolean;
      refunded: boolean;
      cancelCompleteBlock: BigNumber;
    })[]
  >;

  cancelReveal(
    location: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  claimRefund(
    location: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  claimReveal(
    location: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getAllRevealRequests(
    overrides?: CallOverrides
  ): Promise<
    ([
      string,
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      boolean,
      BigNumber
    ] & {
      requester: string;
      collector: string;
      location: BigNumber;
      x: BigNumber;
      y: BigNumber;
      payout: BigNumber;
      paid: boolean;
      refunded: boolean;
      cancelCompleteBlock: BigNumber;
    })[]
  >;

  getConstants(
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber, number] & {
      MARKET_CLOSE_COUNTDOWN_TIMESTAMP: BigNumber;
      CANCELLED_COUNTDOWN_BLOCKS: BigNumber;
      REQUEST_MINIMUM: BigNumber;
      FEE_PERCENT: number;
    }
  >;

  getNRevealRequests(overrides?: CallOverrides): Promise<BigNumber>;

  getRevealRequest(
    location: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      string,
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      boolean,
      BigNumber
    ] & {
      requester: string;
      collector: string;
      location: BigNumber;
      x: BigNumber;
      y: BigNumber;
      payout: BigNumber;
      paid: boolean;
      refunded: boolean;
      cancelCompleteBlock: BigNumber;
    }
  >;

  getRevealRequestPage(
    pageIdx: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    ([
      string,
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      boolean,
      BigNumber
    ] & {
      requester: string;
      collector: string;
      location: BigNumber;
      x: BigNumber;
      y: BigNumber;
      payout: BigNumber;
      paid: boolean;
      refunded: boolean;
      cancelCompleteBlock: BigNumber;
    })[]
  >;

  owner(overrides?: CallOverrides): Promise<string>;

  renounceOwnership(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  requestReveal(
    _a: [BigNumberish, BigNumberish],
    _b: [[BigNumberish, BigNumberish], [BigNumberish, BigNumberish]],
    _c: [BigNumberish, BigNumberish],
    _input: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ],
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  rugPull(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    CANCELLED_COUNTDOWN_BLOCKS(overrides?: CallOverrides): Promise<BigNumber>;

    FEE_PERCENT(overrides?: CallOverrides): Promise<number>;

    MARKET_CLOSE_COUNTDOWN_TIMESTAMP(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    REQUEST_MAXIMUM(overrides?: CallOverrides): Promise<BigNumber>;

    REQUEST_MINIMUM(overrides?: CallOverrides): Promise<BigNumber>;

    bulkGetRevealRequests(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      ([
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        boolean,
        boolean,
        BigNumber
      ] & {
        requester: string;
        collector: string;
        location: BigNumber;
        x: BigNumber;
        y: BigNumber;
        payout: BigNumber;
        paid: boolean;
        refunded: boolean;
        cancelCompleteBlock: BigNumber;
      })[]
    >;

    cancelReveal(
      location: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    claimRefund(
      location: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    claimReveal(
      location: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getAllRevealRequests(
      overrides?: CallOverrides
    ): Promise<
      ([
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        boolean,
        boolean,
        BigNumber
      ] & {
        requester: string;
        collector: string;
        location: BigNumber;
        x: BigNumber;
        y: BigNumber;
        payout: BigNumber;
        paid: boolean;
        refunded: boolean;
        cancelCompleteBlock: BigNumber;
      })[]
    >;

    getConstants(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, number] & {
        MARKET_CLOSE_COUNTDOWN_TIMESTAMP: BigNumber;
        CANCELLED_COUNTDOWN_BLOCKS: BigNumber;
        REQUEST_MINIMUM: BigNumber;
        FEE_PERCENT: number;
      }
    >;

    getNRevealRequests(overrides?: CallOverrides): Promise<BigNumber>;

    getRevealRequest(
      location: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        boolean,
        boolean,
        BigNumber
      ] & {
        requester: string;
        collector: string;
        location: BigNumber;
        x: BigNumber;
        y: BigNumber;
        payout: BigNumber;
        paid: boolean;
        refunded: boolean;
        cancelCompleteBlock: BigNumber;
      }
    >;

    getRevealRequestPage(
      pageIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      ([
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        boolean,
        boolean,
        BigNumber
      ] & {
        requester: string;
        collector: string;
        location: BigNumber;
        x: BigNumber;
        y: BigNumber;
        payout: BigNumber;
        paid: boolean;
        refunded: boolean;
        cancelCompleteBlock: BigNumber;
      })[]
    >;

    owner(overrides?: CallOverrides): Promise<string>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    requestReveal(
      _a: [BigNumberish, BigNumberish],
      _b: [[BigNumberish, BigNumberish], [BigNumberish, BigNumberish]],
      _c: [BigNumberish, BigNumberish],
      _input: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      overrides?: CallOverrides
    ): Promise<void>;

    rugPull(overrides?: CallOverrides): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    OwnershipTransferred(
      previousOwner?: string | null,
      newOwner?: string | null
    ): TypedEventFilter<
      [string, string],
      { previousOwner: string; newOwner: string }
    >;

    RevealCancelled(
      requester?: null,
      loc?: null,
      x?: null,
      y?: null,
      payout?: null,
      cancelCompleteBlock?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber],
      {
        requester: string;
        loc: BigNumber;
        x: BigNumber;
        y: BigNumber;
        payout: BigNumber;
        cancelCompleteBlock: BigNumber;
      }
    >;

    RevealCollected(
      collector?: null,
      loc?: null,
      x?: null,
      y?: null,
      payout?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber, BigNumber, BigNumber],
      {
        collector: string;
        loc: BigNumber;
        x: BigNumber;
        y: BigNumber;
        payout: BigNumber;
      }
    >;

    RevealRefunded(
      requester?: null,
      loc?: null,
      x?: null,
      y?: null,
      payout?: null,
      cancelCompleteBlock?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber],
      {
        requester: string;
        loc: BigNumber;
        x: BigNumber;
        y: BigNumber;
        payout: BigNumber;
        cancelCompleteBlock: BigNumber;
      }
    >;

    RevealRequested(
      requester?: null,
      loc?: null,
      x?: null,
      y?: null,
      payout?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber, BigNumber, BigNumber],
      {
        requester: string;
        loc: BigNumber;
        x: BigNumber;
        y: BigNumber;
        payout: BigNumber;
      }
    >;
  };

  estimateGas: {
    CANCELLED_COUNTDOWN_BLOCKS(overrides?: CallOverrides): Promise<BigNumber>;

    FEE_PERCENT(overrides?: CallOverrides): Promise<BigNumber>;

    MARKET_CLOSE_COUNTDOWN_TIMESTAMP(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    REQUEST_MAXIMUM(overrides?: CallOverrides): Promise<BigNumber>;

    REQUEST_MINIMUM(overrides?: CallOverrides): Promise<BigNumber>;

    bulkGetRevealRequests(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    cancelReveal(
      location: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    claimRefund(
      location: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    claimReveal(
      location: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getAllRevealRequests(overrides?: CallOverrides): Promise<BigNumber>;

    getConstants(overrides?: CallOverrides): Promise<BigNumber>;

    getNRevealRequests(overrides?: CallOverrides): Promise<BigNumber>;

    getRevealRequest(
      location: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRevealRequestPage(
      pageIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    requestReveal(
      _a: [BigNumberish, BigNumberish],
      _b: [[BigNumberish, BigNumberish], [BigNumberish, BigNumberish]],
      _c: [BigNumberish, BigNumberish],
      _input: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    rugPull(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    CANCELLED_COUNTDOWN_BLOCKS(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    FEE_PERCENT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    MARKET_CLOSE_COUNTDOWN_TIMESTAMP(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    REQUEST_MAXIMUM(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    REQUEST_MINIMUM(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    bulkGetRevealRequests(
      startIdx: BigNumberish,
      endIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    cancelReveal(
      location: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    claimRefund(
      location: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    claimReveal(
      location: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getAllRevealRequests(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getConstants(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getNRevealRequests(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRevealRequest(
      location: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRevealRequestPage(
      pageIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    requestReveal(
      _a: [BigNumberish, BigNumberish],
      _b: [[BigNumberish, BigNumberish], [BigNumberish, BigNumberish]],
      _c: [BigNumberish, BigNumberish],
      _input: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    rugPull(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
