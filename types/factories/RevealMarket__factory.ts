/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RevealMarket, RevealMarketInterface } from "../RevealMarket";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "coreAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_marketClosedCountdownTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "collector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "RevealCollected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "RevealRequested",
    type: "event",
  },
  {
    inputs: [],
    name: "MARKET_CLOSE_COUNTDOWN_TIMESTAMP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endIdx",
        type: "uint256",
      },
    ],
    name: "bulkGetRevealRequests",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "requester",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "location",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "paid",
            type: "bool",
          },
        ],
        internalType: "struct RevealRequest[]",
        name: "ret",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "location",
        type: "uint256",
      },
    ],
    name: "claimReveal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllRevealRequests",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "requester",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "location",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "paid",
            type: "bool",
          },
        ],
        internalType: "struct RevealRequest[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNRevealRequests",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "location",
        type: "uint256",
      },
    ],
    name: "getRevealRequest",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "requester",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "location",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "paid",
            type: "bool",
          },
        ],
        internalType: "struct RevealRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "_a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "_b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "_c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[9]",
        name: "_input",
        type: "uint256[9]",
      },
    ],
    name: "requestReveal",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "rugPull",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620027543803806200275483398181016040528101906200003791906200016d565b6000620000496200013760201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600281905550505062000220565b600033905090565b6000815190506200015081620001ec565b92915050565b600081519050620001678162000206565b92915050565b600080604083850312156200018157600080fd5b600062000191858286016200013f565b9250506020620001a48582860162000156565b9150509250929050565b6000620001bb82620001c2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620001f781620001ae565b81146200020357600080fd5b50565b6200021181620001e2565b81146200021d57600080fd5b50565b61252480620002306000396000f3fe60806040526004361061009c5760003560e01c8063715018a611610064578063715018a6146101535780638da5cb5b1461016a5780639cc432ee14610195578063e67d97c6146101d2578063ef988b901461020f578063f2fde38b1461023a5761009c565b80630c6ca749146100a15780632190dfd0146100cc578063260cdfdd146100e35780635c63f1f01461010c57806368ae8c6d14610128575b600080fd5b3480156100ad57600080fd5b506100b6610263565b6040516100c39190611f40565b60405180910390f35b3480156100d857600080fd5b506100e1610270565b005b3480156100ef57600080fd5b5061010a6004803603810190610105919061174a565b610386565b005b61012660048036038101906101219190611693565b6107d9565b005b34801561013457600080fd5b5061013d610dfd565b60405161014a9190611d3c565b60405180910390f35b34801561015f57600080fd5b50610168610e14565b005b34801561017657600080fd5b5061017f610f4e565b60405161018c9190611cce565b60405180910390f35b3480156101a157600080fd5b506101bc60048036038101906101b79190611773565b610f77565b6040516101c99190611d3c565b60405180910390f35b3480156101de57600080fd5b506101f960048036038101906101f4919061174a565b611088565b6040516102069190611f25565b60405180910390f35b34801561021b57600080fd5b5061022461119c565b6040516102319190611f40565b60405180910390f35b34801561024657600080fd5b50610261600480360381019061025c919061166a565b6111a2565b005b6000600480549050905090565b61027861134b565b73ffffffffffffffffffffffffffffffffffffffff16610296610f4e565b73ffffffffffffffffffffffffffffffffffffffff16146102ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e390611e65565b60405180910390fd5b600a6002546102fb91906120d9565b42101561033d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033490611de5565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610383573d6000803e3d6000fd5b50565b60025442106103ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c190611e85565b60405180910390fd5b6000600360008381526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16151515158152505090506000816020015114156104cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c490611f05565b60405180910390fd5b600015158160a00151151514610518576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050f90611e45565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630e1d2115846040518263ffffffff1660e01b81526004016105759190611f40565b608060405180830381600087803b15801561058f57600080fd5b505af11580156105a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c79190611721565b9050600081600001511415610611576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060890611dc5565b60405180910390fd5b60018260a001901515908115158152505081600360008460200151815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff0219169083151502179055509050506000816060015173ffffffffffffffffffffffffffffffffffffffff1683608001516040516106fa90611cb9565b60006040518083038185875af1925050503d8060008114610737576040519150601f19603f3d011682016040523d82523d6000602084013e61073c565b606091505b5050905080610780576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077790611e25565b60405180910390fd5b7f3888ed99072e580a8dbb8d9a4af4867a5b973fe19956442fc0e8ea4cfad02738826060015184602001518560400151866060015187608001516040516107cb959493929190611ce9565b60405180910390a150505050565b600254421061081d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081490611e85565b60405180910390fd5b6000600360008360006009811061085d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015181526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815250509050600081602001511461095d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095490611e05565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166349105550868686866040518563ffffffff1660e01b81526004016109be9493929190611d5e565b602060405180830381600087803b1580156109d857600080fd5b505af1925050508015610a0957506040513d601f19601f82011682018060405250810190610a0691906116f8565b60015b610a48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3f90611ea5565b60405180910390fd5b6001151581151514610a8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8690611ec5565b60405180910390fd5b506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630e1d211584600060098110610b0a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516040518263ffffffff1660e01b8152600401610b2b9190611f40565b608060405180830381600087803b158015610b4557600080fd5b505af1158015610b59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7d9190611721565b90506000816000015114610bc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbd90611ee5565b60405180910390fd5b60006040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200185600060098110610c29577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151815260200185600260098110610c6d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151815260200185600360098110610cb1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151815260200134815260200160001515815250905080600360008360200151815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff0219169083151502179055509050506004816020015190806001815401808255809150506001900390600052602060002001600090919091909150557f58098afb0a262f96a775a4b450b1ce01543db3541730fa9428dd5baaa1ce134081600001518260200151836040015184606001518560800151604051610dec959493929190611ce9565b60405180910390a150505050505050565b6060610e0f6000600480549050610f77565b905090565b610e1c61134b565b73ffffffffffffffffffffffffffffffffffffffff16610e3a610f4e565b73ffffffffffffffffffffffffffffffffffffffff1614610e90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8790611e65565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60608282610f85919061212f565b67ffffffffffffffff811115610fc4577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610ffd57816020015b610fea6113a1565b815260200190600190039081610fe25790505b50905060008390505b828110156110815761101f61101a82611353565b611088565b82858361102c919061212f565b81518110611063577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508080611079906121dc565b915050611006565b5092915050565b6110906113a1565b6000600360008481526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815250509050600081602001511415611193576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118a90611f05565b60405180910390fd5b80915050919050565b60025481565b6111aa61134b565b73ffffffffffffffffffffffffffffffffffffffff166111c8610f4e565b73ffffffffffffffffffffffffffffffffffffffff161461121e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121590611e65565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561128e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128590611da5565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b60006004828154811061138f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050919050565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000151581525090565b60006114026113fd84611f80565b611f5b565b9050808285604086028201111561141857600080fd5b60005b85811015611448578161142e8882611569565b84526020840193506040830192505060018101905061141b565b5050509392505050565b600061146561146084611fa6565b611f5b565b9050808285602086028201111561147b57600080fd5b60005b858110156114ab57816114918882611640565b84526020840193506020830192505060018101905061147e565b5050509392505050565b60006114c86114c384611fcc565b611f5b565b905080828560208602820111156114de57600080fd5b60005b8581101561150e57816114f48882611640565b8452602084019350602083019250506001810190506114e1565b5050509392505050565b600081359050611527816124a9565b92915050565b60008151905061153c816124a9565b92915050565b600082601f83011261155357600080fd5b60026115608482856113ef565b91505092915050565b600082601f83011261157a57600080fd5b6002611587848285611452565b91505092915050565b600082601f8301126115a157600080fd5b60096115ae8482856114b5565b91505092915050565b6000815190506115c6816124c0565b92915050565b6000608082840312156115de57600080fd5b6115e86080611f5b565b905060006115f884828501611655565b600083015250602061160c84828501611655565b602083015250604061162084828501611655565b60408301525060606116348482850161152d565b60608301525092915050565b60008135905061164f816124d7565b92915050565b600081519050611664816124d7565b92915050565b60006020828403121561167c57600080fd5b600061168a84828501611518565b91505092915050565b60008060008061022085870312156116aa57600080fd5b60006116b887828801611569565b94505060406116c987828801611542565b93505060c06116da87828801611569565b9250506101006116ec87828801611590565b91505092959194509250565b60006020828403121561170a57600080fd5b6000611718848285016115b7565b91505092915050565b60006080828403121561173357600080fd5b6000611741848285016115cc565b91505092915050565b60006020828403121561175c57600080fd5b600061176a84828501611640565b91505092915050565b6000806040838503121561178657600080fd5b600061179485828601611640565b92505060206117a585828601611640565b9150509250929050565b60006117bb83836118ca565b60408301905092915050565b60006117d38383611ba5565b60c08301905092915050565b60006117eb8383611c9b565b60208301905092915050565b61180081612163565b82525050565b61180f81612163565b82525050565b61181e81612020565b6118288184612080565b925061183382611ff2565b8060005b8381101561186457815161184b87826117af565b96506118568361204c565b925050600181019050611837565b505050505050565b60006118778261202b565b611881818561208b565b935061188c83611ffc565b8060005b838110156118bd5781516118a488826117c7565b97506118af83612059565b925050600181019050611890565b5085935050505092915050565b6118d381612036565b6118dd818461209c565b92506118e88261200c565b8060005b8381101561191957815161190087826117df565b965061190b83612066565b9250506001810190506118ec565b505050505050565b61192a81612036565b61193481846120a7565b925061193f8261200c565b8060005b8381101561197057815161195787826117df565b965061196283612066565b925050600181019050611943565b505050505050565b61198181612041565b61198b81846120b2565b925061199682612016565b8060005b838110156119c75781516119ae87826117df565b96506119b983612073565b92505060018101905061199a565b505050505050565b6119d881612175565b82525050565b60006119eb6026836120c8565b91506119f682612294565b604082019050919050565b6000611a0e6016836120c8565b9150611a19826122e3565b602082019050919050565b6000611a316019836120c8565b9150611a3c8261230c565b602082019050919050565b6000611a54601c836120c8565b9150611a5f82612335565b602082019050919050565b6000611a77601e836120c8565b9150611a828261235e565b602082019050919050565b6000611a9a601e836120c8565b9150611aa582612387565b602082019050919050565b6000611abd6020836120c8565b9150611ac8826123b0565b602082019050919050565b6000611ae06016836120c8565b9150611aeb826123d9565b602082019050919050565b6000611b036014836120c8565b9150611b0e82612402565b602082019050919050565b6000611b266000836120bd565b9150611b318261242b565b600082019050919050565b6000611b49601a836120c8565b9150611b548261242e565b602082019050919050565b6000611b6c6017836120c8565b9150611b7782612457565b602082019050919050565b6000611b8f6020836120c8565b9150611b9a82612480565b602082019050919050565b60c082016000820151611bbb60008501826117f7565b506020820151611bce6020850182611c9b565b506040820151611be16040850182611c9b565b506060820151611bf46060850182611c9b565b506080820151611c076080850182611c9b565b5060a0820151611c1a60a08501826119cf565b50505050565b60c082016000820151611c3660008501826117f7565b506020820151611c496020850182611c9b565b506040820151611c5c6040850182611c9b565b506060820151611c6f6060850182611c9b565b506080820151611c826080850182611c9b565b5060a0820151611c9560a08501826119cf565b50505050565b611ca4816121a1565b82525050565b611cb3816121a1565b82525050565b6000611cc482611b19565b9150819050919050565b6000602082019050611ce36000830184611806565b92915050565b600060a082019050611cfe6000830188611806565b611d0b6020830187611caa565b611d186040830186611caa565b611d256060830185611caa565b611d326080830184611caa565b9695505050505050565b60006020820190508181036000830152611d56818461186c565b905092915050565b600061022082019050611d746000830187611921565b611d816040830186611815565b611d8e60c0830185611921565b611d9c610100830184611978565b95945050505050565b60006020820190508181036000830152611dbe816119de565b9050919050565b60006020820190508181036000830152611dde81611a01565b9050919050565b60006020820190508181036000830152611dfe81611a24565b9050919050565b60006020820190508181036000830152611e1e81611a47565b9050919050565b60006020820190508181036000830152611e3e81611a6a565b9050919050565b60006020820190508181036000830152611e5e81611a8d565b9050919050565b60006020820190508181036000830152611e7e81611ab0565b9050919050565b60006020820190508181036000830152611e9e81611ad3565b9050919050565b60006020820190508181036000830152611ebe81611af6565b9050919050565b60006020820190508181036000830152611ede81611b3c565b9050919050565b60006020820190508181036000830152611efe81611b5f565b9050919050565b60006020820190508181036000830152611f1e81611b82565b9050919050565b600060c082019050611f3a6000830184611c20565b92915050565b6000602082019050611f556000830184611caa565b92915050565b6000611f65611f76565b9050611f7182826121ab565b919050565b6000604051905090565b600067ffffffffffffffff821115611f9b57611f9a612254565b5b602082029050919050565b600067ffffffffffffffff821115611fc157611fc0612254565b5b602082029050919050565b600067ffffffffffffffff821115611fe757611fe6612254565b5b602082029050919050565b6000819050919050565b6000819050602082019050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600081519050919050565b600060029050919050565b600060099050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b60006120e4826121a1565b91506120ef836121a1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561212457612123612225565b5b828201905092915050565b600061213a826121a1565b9150612145836121a1565b92508282101561215857612157612225565b5b828203905092915050565b600061216e82612181565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6121b482612283565b810181811067ffffffffffffffff821117156121d3576121d2612254565b5b80604052505050565b60006121e7826121a1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561221a57612219612225565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f506c616e6574206973206e6f742072657665616c656400000000000000000000600082015250565b7f4d61726b6574706c616365206973207374696c6c206f70656e00000000000000600082015250565b7f52657665616c5265717565737420616c72656164792065786973747300000000600082015250565b7f52657665616c5265717565737420636c61696d20686173206661696c65640000600082015250565b7f52657665616c5265717565737420686173206265656e20636c61696d65640000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4d61726b6574706c6163652068617320636c6f73656400000000000000000000600082015250565b7f496e76616c69642072657665616c2070726f6f66000000000000000000000000600082015250565b50565b7f446973617374657220776974682072657665616c2070726f6f66000000000000600082015250565b7f506c616e657420616c72656164792072657665616c6564000000000000000000600082015250565b7f4e6f2052657665616c5265717565737420666f72207468617420506c616e6574600082015250565b6124b281612163565b81146124bd57600080fd5b50565b6124c981612175565b81146124d457600080fd5b50565b6124e0816121a1565b81146124eb57600080fd5b5056fea2646970667358221220497bc7a9036140cb469355bd3f3c7a2c2f250a2fe193334a5f8c292819aa76f364736f6c63430008040033";

export class RevealMarket__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    coreAddress: string,
    _marketClosedCountdownTimestamp: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RevealMarket> {
    return super.deploy(
      coreAddress,
      _marketClosedCountdownTimestamp,
      overrides || {}
    ) as Promise<RevealMarket>;
  }
  getDeployTransaction(
    coreAddress: string,
    _marketClosedCountdownTimestamp: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      coreAddress,
      _marketClosedCountdownTimestamp,
      overrides || {}
    );
  }
  attach(address: string): RevealMarket {
    return super.attach(address) as RevealMarket;
  }
  connect(signer: Signer): RevealMarket__factory {
    return super.connect(signer) as RevealMarket__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RevealMarketInterface {
    return new utils.Interface(_abi) as RevealMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RevealMarket {
    return new Contract(address, _abi, signerOrProvider) as RevealMarket;
  }
}
